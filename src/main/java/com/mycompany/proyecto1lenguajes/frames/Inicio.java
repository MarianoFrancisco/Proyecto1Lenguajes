/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto1lenguajes.frames;

import com.mycompany.proyecto1lenguajes.AlmacenadorReportes.*;
import com.mycompany.proyecto1lenguajes.Automatas.Identificador;
import static com.mycompany.proyecto1lenguajes.Controladores.MovilizadorDatos.movilizar;
import com.mycompany.proyecto1lenguajes.Archivos.CargaArchivo;
import com.mycompany.proyecto1lenguajes.Archivos.ExportarArchivo;
import com.mycompany.proyecto1lenguajes.Automatas.Agrupacion;
import com.mycompany.proyecto1lenguajes.Automatas.NumeroDecimal;
import com.mycompany.proyecto1lenguajes.Automatas.Operador;
import com.mycompany.proyecto1lenguajes.Automatas.Puntuacion;
import com.mycompany.proyecto1lenguajes.CargadorObjetos.*;
import com.mycompany.proyecto1lenguajes.Controladores.CodigoCondicionalRepetidoAutomata;
import static com.mycompany.proyecto1lenguajes.Controladores.DatosInstanciadores.instanciadores;
import com.mycompany.proyecto1lenguajes.RegistroTablas.*;
import com.mycompany.proyecto1lenguajes.RegistroTablas.ReporteErrores;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author Mariano
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public static CargarError cargarError;
    public static CargarLexema cargarLexema;
    public static CargarToken cargarToken;
    public static ArrayList<ReporteErrorObjeto> errorEstablecido;//indicamos un array list de error para leer los archivos
    public static ArrayList<RecuentoLexemaObjeto> lexemaEstablecido;//indicamos un array list de lexema para leer los archivos
    public static ArrayList<ReporteTokensObjeto> tokenEstablecido;//indicamos un array list de token para leer los archivos
    public Inicio() {
        initComponents();
        crearReportes();
        this.setLocationRelativeTo(null);//Centramos nuestro frame
    }
    public void crearReportes(){
        this.cargarError = new CargarError();  
        this.cargarLexema = new CargarLexema();
        this.cargarToken = new CargarToken();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CargaArchivo = new javax.swing.JTextArea();
        cargarArchivo = new javax.swing.JButton();
        analizarTexto = new javax.swing.JButton();
        buscarCadena = new javax.swing.JButton();
        buscarText = new javax.swing.JTextField();
        guardarArchivo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MovimientoEstado = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReportToken = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        RecuentoLexema = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        ReporteError = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio");

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Reportes de tokens");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 370, -1, -1));

        CargaArchivo.setColumns(20);
        CargaArchivo.setRows(5);
        jScrollPane1.setViewportView(CargaArchivo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 650, 270));

        cargarArchivo.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        cargarArchivo.setForeground(new java.awt.Color(0, 0, 0));
        cargarArchivo.setText("Cargar Archivo");
        cargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoActionPerformed(evt);
            }
        });
        jPanel1.add(cargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        analizarTexto.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        analizarTexto.setForeground(new java.awt.Color(0, 0, 0));
        analizarTexto.setText("ANALIZAR TEXTO");
        analizarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarTextoActionPerformed(evt);
            }
        });
        jPanel1.add(analizarTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        buscarCadena.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        buscarCadena.setForeground(new java.awt.Color(0, 0, 0));
        buscarCadena.setText("Buscar cadena");
        buscarCadena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarCadenaActionPerformed(evt);
            }
        });
        jPanel1.add(buscarCadena, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, -1, -1));
        jPanel1.add(buscarText, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 10, 180, 20));

        guardarArchivo.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        guardarArchivo.setForeground(new java.awt.Color(0, 0, 0));
        guardarArchivo.setText("Guardar Archivo");
        guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarArchivoActionPerformed(evt);
            }
        });
        jPanel1.add(guardarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));

        MovimientoEstado.setColumns(20);
        MovimientoEstado.setRows(5);
        jScrollPane2.setViewportView(MovimientoEstado);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, 450, 270));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mariano");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 630, -1, -1));

        ReportToken.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre Token", "Lexema", "Fila", "Columna"
            }
        ));
        jScrollPane3.setViewportView(ReportToken);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, 410, 210));

        RecuentoLexema.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Lexema", "Token", "Cantidad"
            }
        ));
        jScrollPane4.setViewportView(RecuentoLexema);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 350, 210));

        ReporteError.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cadena error", "Fila", "Columna"
            }
        ));
        jScrollPane6.setViewportView(ReporteError);

        jPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 350, 210));

        jLabel5.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Texto Cargado");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        jLabel6.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Movimiento de estado");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 50, -1, -1));

        jLabel7.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Reporte de errores");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, -1, -1));

        jLabel8.setFont(new java.awt.Font("Engravers MT", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Recuento de lexemas");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarArchivoActionPerformed
        //filechooser para abrir o guardar archivos
        JFileChooser archivoEleccion = new JFileChooser();
        int eleccion = archivoEleccion.showOpenDialog(this);//variable para seleccionar
        //aprove option es si el usuario le da en aceptar
        if (eleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = archivoEleccion.getSelectedFile();//seleccionamos file para fileReader, agarramos el seleccionado
            try {
                CargaArchivo carga = new CargaArchivo();
                carga.leer(archivo, CargaArchivo);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al leer carga de archivo");
                ex.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cargarArchivoActionPerformed

    private void analizarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarTextoActionPerformed
        inicializadorValores();
        String linea,reduccionLinea;
        String texto=CargaArchivo.getText();
        Reader leer = new StringReader(texto);
        int contador=0;
        char verificadorLinea;
        BufferedReader leerTA = new BufferedReader(leer);
        try {
            while ((linea = leerTA.readLine()) != null) {
                contador++;
                movilizar.setFila(contador);
                movilizar.setColumna(0);
                movilizar.setCaracteresUsados(0);
                movilizar.setCadenaUsada("");
                verificadorLinea=linea.charAt(0);
                String comprobarPunto=Character.toString(verificadorLinea);
                if(Character.isLetter(verificadorLinea)){
                    Identificador.identificadorInicio(linea,MovimientoEstado);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);
                    while(movilizar.getCaracteresUsados()<linea.length()){
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), MovimientoEstado);
                    }
                }else if(Character.isDigit(verificadorLinea)){
                    NumeroDecimal.numeroDecimalInicio(linea,MovimientoEstado);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);
                    while(movilizar.getCaracteresUsados()<linea.length()){
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), MovimientoEstado);
                    }
                }else if(comprobarPunto.equals("+")|comprobarPunto.equals("-")|comprobarPunto.equals("*")|comprobarPunto.equals("/")|comprobarPunto.equals("%")){
                    Operador.operadorInicio(linea,MovimientoEstado);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);
                    while(movilizar.getCaracteresUsados()<linea.length()){
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), MovimientoEstado);
                    }  
                }else if(comprobarPunto.equals(".")|comprobarPunto.equals(",")|comprobarPunto.equals(";")|comprobarPunto.equals(".")){
                    Puntuacion.puntuacionInicio(linea,MovimientoEstado);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);
                    while(movilizar.getCaracteresUsados()<linea.length()){
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), MovimientoEstado);
                    }
                }else if(comprobarPunto.equals("(")|comprobarPunto.equals(")")|comprobarPunto.equals("[")|comprobarPunto.equals("]")|comprobarPunto.equals("{")|comprobarPunto.equals("}")){
                    Agrupacion.agrupacionInicio(linea,MovimientoEstado);
                    reduccionLinea=linea.substring(movilizar.getCaracteresUsados(), linea.length());
                    pasadorDatos(linea,reduccionLinea,verificadorLinea);
                    while(movilizar.getCaracteresUsados()<linea.length()){
                        CodigoCondicionalRepetidoAutomata.codigoAutomataRepitencia(instanciadores.getLinea(), instanciadores.getVerificadorLinea(), instanciadores.getReduccionLinea(), movilizar.getCaracteresUsados(), MovimientoEstado);
                    }
                }
                
            }
            if(movilizar.getCondiconalError()==1){
                ReporteErrores.completarTabla(errorEstablecido, ReporteError);
            }else if(movilizar.getCondiconalError()==0){
                RecuentoLexemas.completarTabla(lexemaEstablecido, RecuentoLexema);
                ReporteTokens.completarTabla(tokenEstablecido, ReportToken);
            }
        } catch (IOException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_analizarTextoActionPerformed
    private void inicializadorValores(){
        errorEstablecido = new ArrayList<>();  
        lexemaEstablecido = new ArrayList<>();   
        tokenEstablecido = new ArrayList<>(); 
        ReporteErrores.completarTabla(errorEstablecido, ReporteError);
        RecuentoLexemas.completarTabla(lexemaEstablecido, RecuentoLexema);
        ReporteTokens.completarTabla(tokenEstablecido, ReportToken);
        movilizar.setCondiconalError(0);
        MovimientoEstado.setText("");
        movilizar.setCaracteresUsados(0);
        movilizar.setCadenaUsada("");
        movilizar.setFila(0);
        movilizar.setColumna(0);
    }
    public void pasadorDatos(String linea, String reduccionLinea, char verificadorLinea){
        instanciadores.setLinea(linea);
        instanciadores.setReduccionLinea(reduccionLinea);
        instanciadores.setVerificadorLinea(verificadorLinea);
    }
    private void buscarCadenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarCadenaActionPerformed
        String valorBusqueda,textoArea,almacenadorPalabra;
        valorBusqueda= buscarText.getText();
        int localizador=0;
        if (valorBusqueda.length() >= 1) {       
            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.RED);
            Highlighter h = CargaArchivo.getHighlighter();
            h.removeAllHighlights();
            textoArea=CargaArchivo.getText();
            for (int i = 0; i < textoArea.length(); i++) {
                if(textoArea.charAt(i)==valorBusqueda.charAt(0)){
                    almacenadorPalabra="";
                    localizador=i;
                    for (int j = 0; j < valorBusqueda.length(); j++) {
                        if(textoArea.charAt(i)==valorBusqueda.charAt(j)){ 
                            almacenadorPalabra=almacenadorPalabra+Character.toString(valorBusqueda.charAt(j));
                            if (valorBusqueda.equals(almacenadorPalabra)) {
                                try {
                                    h.addHighlight(localizador, localizador+valorBusqueda.length(), highlightPainter);
                                } catch (BadLocationException ex) {
                                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            i++;      
                        }
                    }
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Primero ingresa una cadena para ser leída");
        }
        //CargaArchivo.setText(CargaArchivo.getText().replaceAll(valorBusqueda, espacio));
    }//GEN-LAST:event_buscarCadenaActionPerformed

    private void guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarArchivoActionPerformed
        ExportarArchivo.exportarArchivo(CargaArchivo);//enviamos parametro para guardar archivo texto
    }//GEN-LAST:event_guardarArchivoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea CargaArchivo;
    public static javax.swing.JTextArea MovimientoEstado;
    public static javax.swing.JTable RecuentoLexema;
    public static javax.swing.JTable ReportToken;
    public static javax.swing.JTable ReporteError;
    private javax.swing.JButton analizarTexto;
    private javax.swing.JButton buscarCadena;
    private javax.swing.JTextField buscarText;
    private javax.swing.JButton cargarArchivo;
    private javax.swing.JButton guardarArchivo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
